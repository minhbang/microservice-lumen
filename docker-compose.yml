version: '3'
services:
  ####################################################################################################
  # Creating container MySQL
  ####################################################################################################
  mysql:
    image: mysql:5.7
    ports:
        - "3306:3306"
    expose:
        - 3306
    volumes:
        - ./image/mysql/data/:/var/lib/mysql
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_USER: root
        MYSQL_PASSWORD: root
        MYSQL_DATABASE: test_develop

  ####################################################################################################
  # The Redis Server
  ####################################################################################################
  redis:
    image: redis:latest
    ports:
        - "6379:6379"
    expose:
        - 6379
    volumes:
        - ./image/redis/data:/data

  ####################################################################################################
  # The Application
  ####################################################################################################
  app:
    build:
      context: ./
      dockerfile: Docker/app.dockerfile
    working_dir: /var/www
    volumes:
      - ./:/var/www
    links:
      - mysql
  ####################################################################################################
  # The Web Server
  ####################################################################################################
  web:
    build:
      context: ./
      dockerfile: Docker/web.dockerfile
    working_dir: /var/www
    volumes:
      - ./:/var/www/
    ports:
      - "80:80"
    depends_on:
      - app
